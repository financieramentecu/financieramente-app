name: QA PR Testing Pipeline

on:
    pull_request:
        branches: [develop]

env:
    NODE_VERSION: "20"

permissions:
    contents: read
    pull-requests: write
    issues: write

jobs:
    lint:
        name: 🔍 Lint Code
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
            - run: npm ci
            - run: npm run lint

    unit-tests:
        name: 🧪 Unit Tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
            - run: npm ci
            - run: npm run test:unit:coverage

            - name: Upload coverage reports
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-unit
                  path: coverage/
                  retention-days: 7

            - name: Comment coverage on PR
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs')
                      const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'))
                      const total = coverage.total

                      const body = `## 📊 Unit Test Coverage

                      | Metric | Percentage |
                      |--------|-----------|
                      | Lines | ${total.lines.pct}% |
                      | Statements | ${total.statements.pct}% |
                      | Functions | ${total.functions.pct}% |
                      | Branches | ${total.branches.pct}% |`

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: body
                      })

    integration-tests:
        name: 🔗 Integration Tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
            - run: npm ci
            - run: npm run test:integration:coverage

            - name: Upload coverage reports
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-integration
                  path: coverage/
                  retention-days: 7

    visual-tests:
        name: 🎨 Visual Tests
        runs-on: ubuntu-latest
        needs: [lint, unit-tests, integration-tests]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Check for relevant changes
              id: changes
              uses: dorny/paths-filter@v3
              with:
                  filters: |
                      storybook:
                          - 'src/stories/**'
                          - 'src/components/**/*.tsx'
                          - 'src/components/**/*.ts'
                          - 'src/app/**/*.tsx'
                          - 'src/app/**/*.css'
                          - '.storybook/**'
                          - 'tailwind.config.ts'
                          - 'postcss.config.mjs'
                          - 'src/lib/utils.ts'
                          - 'package.json'
                          - 'package-lock.json'

            - name: Setup Node.js
              if: steps.changes.outputs.storybook == 'true'
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: Install dependencies
              if: steps.changes.outputs.storybook == 'true'
              run: npm ci

            - name: Build Storybook
              if: steps.changes.outputs.storybook == 'true'
              run: npm run build-storybook

            - name: Publish to Chromatic
              if: steps.changes.outputs.storybook == 'true'
              id: chromatic
              uses: chromaui/action@latest
              with:
                  projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
                  buildScriptName: build-storybook
                  exitZeroOnChanges: false
                  exitOnceUploaded: false
                  onlyChanged: true
                  autoAcceptChanges: ${{ github.ref == 'refs/heads/develop' }}
                  ignoreLastBuildOnBranch: develop

            - name: Comment PR with Chromatic results
              if: steps.changes.outputs.storybook == 'true' && github.event_name == 'pull_request'
              uses: actions/github-script@v7
              with:
                  script: |
                      const storybookUrl = '${{ steps.chromatic.outputs.storybookUrl }}'
                      const buildUrl = '${{ steps.chromatic.outputs.buildUrl }}'
                      const changeCount = '${{ steps.chromatic.outputs.changeCount }}'

                      const isDevelopBranch = context.ref === 'refs/heads/develop'
                      const body = `## 🎨 Visual Testing Results

                      ${changeCount > 0 
                        ? (isDevelopBranch 
                            ? '✅ **Visual changes detected and auto-accepted!**' 
                            : '⚠️ **Visual changes detected!**')
                        : '✅ **No visual changes**'}

                      - 📚 [View Storybook](${storybookUrl})
                      - 🔍 [Review Changes](${buildUrl})
                      - 📊 Changes: ${changeCount}

                      ${changeCount > 0 && !isDevelopBranch 
                        ? '**Action required**: Please review and approve changes in Chromatic before merging.' 
                        : changeCount > 0 && isDevelopBranch 
                        ? '**Auto-accepted**: Changes were automatically approved on develop branch.' 
                        : ''}`

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: body
                      })

            - name: Visual testing status check
              if: steps.changes.outputs.storybook == 'true' && steps.chromatic.outputs.changeCount > 0 && github.ref != 'refs/heads/develop'
              run: |
                  echo "❌ Visual changes detected and not approved"
                  echo "Please review changes at: ${{ steps.chromatic.outputs.buildUrl }}"
                  exit 1

            - name: Visual testing success (auto-accepted)
              if: steps.changes.outputs.storybook == 'true' && steps.chromatic.outputs.changeCount > 0 && github.ref == 'refs/heads/develop'
              run: |
                  echo "✅ Visual changes detected and auto-accepted on develop branch"
                  echo "📊 Changes: ${{ steps.chromatic.outputs.changeCount }}"
                  echo "🔗 Build details: ${{ steps.chromatic.outputs.buildUrl }}"

            - name: No visual changes to test
              if: steps.changes.outputs.storybook != 'true'
              run: |
                  echo "✅ No changes detected in visual components"
                  echo "📁 Skipped files: Stories, Components, Styles, Tailwind config"
                  echo "💰 Chromatic build skipped to save resources"

    e2e-tests:
        name: 🌐 E2E Tests
        runs-on: ubuntu-latest
        needs: [lint, unit-tests, integration-tests, visual-tests]

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Check for E2E relevant changes
              id: changes
              uses: dorny/paths-filter@v3
              with:
                  filters: |
                      e2e:
                          - 'e2e/**'
                          - 'src/**/*.tsx'
                          - 'src/**/*.ts'
                          - 'src/app/**'
                          - 'src/components/**'
                          - 'package.json'
                          - 'package-lock.json'

            - name: Setup Node.js
              if: steps.changes.outputs.e2e == 'true'
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: Cache Playwright browsers
              if: steps.changes.outputs.e2e == 'true'
              uses: actions/cache@v4
              with:
                  path: ~/.cache/ms-playwright
                  key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-playwright-

            - name: Install dependencies
              if: steps.changes.outputs.e2e == 'true'
              run: npm ci

            - name: Install Playwright browsers
              if: steps.changes.outputs.e2e == 'true'
              run: npx playwright install --with-deps chromium webkit

            - name: Run E2E tests
              if: steps.changes.outputs.e2e == 'true'
              run: npx playwright test --project=chromium --project=webkit
              env:
                  CI: true
                  BASE_URL: http://localhost:3000

            - name: Upload Playwright report
              if: always() && steps.changes.outputs.e2e == 'true'
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 7

            - name: Skip E2E tests
              if: steps.changes.outputs.e2e != 'true'
              run: |
                  echo "✅ No E2E relevant changes detected"
                  echo "📁 Skipped files: E2E tests, Components, App pages"
                  echo "💰 E2E tests skipped to save resources"

    test-summary:
        name: 📝 Test Summary
        runs-on: ubuntu-latest
        needs: [lint, unit-tests, integration-tests, visual-tests, e2e-tests]
        if: always()
        steps:
            - name: Create summary comment
              uses: actions/github-script@v7
              with:
                  script: |
                      const jobs = {
                        lint: '${{ needs.lint.result }}',
                        unit: '${{ needs.unit-tests.result }}',
                        integration: '${{ needs.integration-tests.result }}',
                        visual: '${{ needs.visual-tests.result }}',
                        e2e: '${{ needs.e2e-tests.result }}'
                      }

                      const emoji = (result) => {
                        if (result === 'success') return '✅'
                        if (result === 'skipped') return '⏭️'
                        return '❌'
                      }

                      const body = `## 🧪 Test Pipeline Results

                      | Test Type | Status |
                      |-----------|--------|
                      | Linting | ${emoji(jobs.lint)} ${jobs.lint} |
                      | Unit Tests | ${emoji(jobs.unit)} ${jobs.unit} |
                      | Integration Tests | ${emoji(jobs.integration)} ${jobs.integration} |
                      | Visual Tests | ${emoji(jobs.visual)} ${jobs.visual} |
                      | E2E Tests | ${emoji(jobs.e2e)} ${jobs.e2e} |

                      ${Object.values(jobs).every(r => r === 'success' || r === 'skipped') ? '🎉 All tests passed!' : '⚠️ Some tests failed. Please review the logs.'}`

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: body
                      })
